{%- layout none -%}
<div class="contenedor-deseo" id="wishlist-container">
  <h1 class="titulo">{{ page.title }}</h1>
  <div id="wishlist-items"></div>
</div>

<script>
 document.addEventListener('DOMContentLoaded', function() {
  var wishlist = JSON.parse(localStorage.getItem('wishlist')) || []; // Asegúrate de que esto almacena handles, no IDs
  var container = document.getElementById('wishlist-items');

  wishlist.forEach(function(productHandle) {
    fetch(`/products/${productHandle}.js`)
      .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(product => {
        container.innerHTML += `<div class="wishlist-product" id="wishlist-item-${productHandle}">
          <a href="${product.url}">
                                  <img width=150 height=150 src="${product.featured_image}" alt="${product.title}">
                                  </a>
                                  <h3>${product.title}</h3>
                                  <span>${product.variants[0].price}</span>
                                  <button onclick="addToCart(${product.variants[0].id})">Add to Cart</button>
                                  <button onclick="removeFromWishlist('${productHandle}')">Remove</button>
                                </div>`;
      })
      .catch(error => {
        console.error('There was a problem with the fetch operation:', error);
      });
  });
});

function addToCart(variantId) {
  $.ajax({
    type: 'POST',
    url: '/cart/add.js',
    data: {
      id: variantId,
      quantity: 1
    },
    dataType: 'json',
    success: function() { 
      window.location.href = '/cart'; // Redirige al usuario a la página del carrito
    },
    error: function() {
      alert("Hubo un error al añadir el producto al carrito.");
    }
  });
}


function removeFromWishlist(productId) {
  var wishlist = JSON.parse(localStorage.getItem('wishlist')) || [];
  var newWishlist = wishlist.filter(function(item) {
    return item !== productId;
  });
  localStorage.setItem('wishlist', JSON.stringify(newWishlist));

  // Eliminar el elemento de la lista de deseos en la interfaz
  document.getElementById('wishlist-item-' + productId).remove();
  updateWishlistCount();
  // Manejar el estado vacío
  if (newWishlist.length === 0) {
    container.innerHTML = '<p>Tu lista de deseos está vacía.</p>';
  }
}



</script>
<style>
  .titulo{
  display: flex;
  justify-content: center;
  align-items: center;
  font-weight: bold;
  font-size:2rem;
  }
  .contenedor-deseo{
  padding: 16px;
  }
</style>